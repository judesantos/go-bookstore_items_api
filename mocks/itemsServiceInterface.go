// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	items "github.com/judesantos/go-bookstore_items_api/domain/items"
	mock "github.com/stretchr/testify/mock"

	queries "github.com/judesantos/go-bookstore_items_api/domain/queries"

	rest_errors "github.com/judesantos/go-bookstore_utils/rest_errors"
)

// itemsServiceInterface is an autogenerated mock type for the itemsServiceInterface type
type itemsServiceInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *itemsServiceInterface) Create(_a0 items.Item) (*items.Item, rest_errors.IRestError) {
	ret := _m.Called(_a0)

	var r0 *items.Item
	if rf, ok := ret.Get(0).(func(items.Item) *items.Item); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*items.Item)
		}
	}

	var r1 rest_errors.IRestError
	if rf, ok := ret.Get(1).(func(items.Item) rest_errors.IRestError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(rest_errors.IRestError)
		}
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *itemsServiceInterface) Get(_a0 string) (*items.Item, rest_errors.IRestError) {
	ret := _m.Called(_a0)

	var r0 *items.Item
	if rf, ok := ret.Get(0).(func(string) *items.Item); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*items.Item)
		}
	}

	var r1 rest_errors.IRestError
	if rf, ok := ret.Get(1).(func(string) rest_errors.IRestError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(rest_errors.IRestError)
		}
	}

	return r0, r1
}

// Search provides a mock function with given fields: _a0
func (_m *itemsServiceInterface) Search(_a0 queries.EsQuery) ([]items.Item, rest_errors.IRestError) {
	ret := _m.Called(_a0)

	var r0 []items.Item
	if rf, ok := ret.Get(0).(func(queries.EsQuery) []items.Item); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]items.Item)
		}
	}

	var r1 rest_errors.IRestError
	if rf, ok := ret.Get(1).(func(queries.EsQuery) rest_errors.IRestError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(rest_errors.IRestError)
		}
	}

	return r0, r1
}
