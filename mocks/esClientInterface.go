// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	elastic "github.com/olivere/elastic"

	mock "github.com/stretchr/testify/mock"
)

// esClientInterface is an autogenerated mock type for the esClientInterface type
type esClientInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0, _a1, _a2
func (_m *esClientInterface) Get(_a0 string, _a1 string, _a2 string) (*elastic.GetResult, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *elastic.GetResult
	if rf, ok := ret.Get(0).(func(string, string, string) *elastic.GetResult); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elastic.GetResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Index provides a mock function with given fields: _a0, _a1, _a2
func (_m *esClientInterface) Index(_a0 string, _a1 string, _a2 interface{}) (*elastic.IndexResponse, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *elastic.IndexResponse
	if rf, ok := ret.Get(0).(func(string, string, interface{}) *elastic.IndexResponse); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elastic.IndexResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, interface{}) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Search provides a mock function with given fields: _a0, _a1
func (_m *esClientInterface) Search(_a0 string, _a1 elastic.Query) (*elastic.SearchResult, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *elastic.SearchResult
	if rf, ok := ret.Get(0).(func(string, elastic.Query) *elastic.SearchResult); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*elastic.SearchResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, elastic.Query) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// setClient provides a mock function with given fields: _a0
func (_m *esClientInterface) setClient(_a0 *elastic.Client) {
	_m.Called(_a0)
}
